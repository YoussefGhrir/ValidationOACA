{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .clignotant {
            animation: clignote 1s linear infinite;
        }

        @keyframes clignote {
            50% {
                opacity: 0;
            }
        }
        .alert-age {
            background-color: red;
            color: white;
            font-weight: bold;
            padding: 10px;
            border-radius: 5px;
            text-align: center;
            margin-bottom: 15px;
        }
    </style>
{% endblock %}

{% block body %}
    <main id="main" class="main">
        <section class="section">
            <div class="row">
                <div class="col-lg-12">
                    <!-- Card principale -->
                    <div class="card shadow-lg p-4 mb-5 bg-blue rounded">
                        <div class="card-body">
                            <!-- Titre -->
                            <h5 class="card-title text-center mb-4" style="color: #FFEBCD; font-weight: bold;">
                                INFORMATIONS DU PILOTE POUR
                                <span style="color: #00CED1; font-style: italic; font-weight: bold;">{{ pilote.nom }} {{ pilote.prenom }}</span>
                            </h5>

                            <!-- Message clignotant pour pilote âgé -->
                            {% set currentYear = "now"|date("Y") %}
                            {% set birthYear = pilote.datebirth ? pilote.datebirth|date("Y") : null %}
                            {% set age = birthYear ? (currentYear - birthYear) : null %}

                            {% if age and age >= 60 and age <= 65 %}
                                <div id="age-warning" class="alert-age clignotant">
                                    Pilote âgé
                                </div>
                            {% endif %}

                            <!-- Toggle switch -->
                            {% if pilote.type is same as(false) %}
                                <div class="d-flex justify-content-center mb-4">
                                    <label class="switch">
                                        <input type="checkbox" class="toggle-switch" data-id="{{ pilote.id }}"
                                                {% if pilote.statut %} checked {% endif %}>
                                        <span class="slider round">
                                        <span class="switch-text-on">1 an</span>
                                        <span class="switch-text-off">2 ans</span>
                                    </span>
                                    </label>
                                </div>
                            {% endif %}

                            <!-- Section gauche et droite -->
                            <div class="row">
                                <!-- Colonne gauche -->
                                <div class="col-md-6">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover">
                                            <tbody>
                                            <tr>
                                                <th scope="row">Type de Licence :</th>
                                                <td>{{ pilote.getTypeLabel() }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Date de Licence :</th>
                                                <td>{{ pilote.datelicence ? pilote.datelicence|date('d/m/Y') : 'Non défini' }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Numéro</th>
                                                <td>{{ pilote.numero }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Nom</th>
                                                <td>{{ pilote.nom }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Prénom</th>
                                                <td>{{ pilote.prenom }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Fonction</th>
                                                <td>{{ pilote.fonction }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Date de Naissance</th>
                                                <td>{{ pilote.datebirth ? pilote.datebirth|date('d/m/Y') : 'Non défini' }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Type d'Avion</th>
                                                <td>{{ pilote.avion.nom }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Privilège Français</th>
                                                <td style="white-space: pre-wrap; word-wrap: break-word;">{{ pilote.privilegefr }}</td>
                                            </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                                <!-- Colonne droite -->
                                <div class="col-md-6">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover">
                                            <tbody>
                                            <tr>
                                                <th scope="row">1ère délivrance</th>
                                                <td>{{ pilote.firstdate ? pilote.firstdate|date('d/m/Y') : 'Non défini' }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Délivrée le</th>
                                                <td>{{ pilote.validite ? pilote.validite|date('d/m/Y') : 'Non défini' }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Validité Qualification</th>
                                                <td>{{ pilote.datequalif ? pilote.datequalif|date('d/m/Y') : 'Non défini' }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Validité Linguistique</th>
                                                <td>{{ pilote.datelangue ? pilote.datelangue|date('d/m/Y') : 'Non défini' }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Pays</th>
                                                <td>{{ pilote.pays }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Nationalité</th>
                                                <td>{{ pilote.nationalite }}</td>
                                            </tr>
                                            <tr>
                                                <th scope="row">Compagnie</th>
                                                <td>{{ pilote.compagnie.nom }}</td>
                                            </tr>

                                            <tr>
                                                <th scope="row">Privilège Anglais</th>
                                                <td style="white-space: pre-wrap; word-wrap: break-word;">{{ pilote.privilegeag }}</td>
                                            </tr>

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            <!-- Boutons -->
                            <div class="row mt-4">
                                <div class="col-12 d-flex justify-content-between">
                                    {% if pilote.type is same as(false) %}
                                        <a href="{{ path('app_pilote_atpl') }}" class="btn btn-warning btn-lg">
                                            <i class="fas fa-arrow-left"></i> Retour à la liste ATPL
                                        </a>
                                    {% elseif pilote.type is same as(true) %}
                                        <a href="{{ path('app_pilote_cpl') }}" class="btn btn-warning btn-lg">
                                            <i class="fas fa-arrow-left"></i> Retour à la liste CPL
                                        </a>
                                    {% else %}
                                        <a href="{{ path('app_pilote_double') }}" class="btn btn-warning btn-lg">
                                            <i class="fas fa-arrow-left"></i> Retour à la liste DOUBLE
                                        </a>
                                    {% endif %}

                                    <a href="{{ path('app_pilote_edit', {'id': pilote.id}) }}" class="btn btn-secondary btn-lg">
                                        <i class="bi bi-pencil-square"></i> Modifier
                                    </a>
                                    <a href="{{ path('pilote_historique', {'id': pilote.id}) }}" class="btn btn-warning btn-lg" target="_blank" rel="noopener noreferrer">
                                        <i class="bi bi-clock-history"></i> Historique
                                    </a>
                                    <a href="{{ path('pilote_generate_pdf', {'id': pilote.id}) }}" class="btn btn-dark btn-lg" target="_blank" rel="noopener noreferrer">
                                        <i class="fas fa-file-pdf"></i> PDF
                                    </a>
                                    <form action="{{ path('app_pilote_delete', {'id': pilote.id}) }}" method="post" style="display:inline;">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ pilote.id) }}">
                                        <button type="submit" class="btn btn-danger btn-lg" onclick="return confirm('Êtes-vous sûr de vouloir supprimer ce pilote ?')">
                                            <i class="bi bi-trash"></i> Supprimer
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleSwitches = document.querySelectorAll('.toggle-switch');

            toggleSwitches.forEach(function (toggle) {
                toggle.addEventListener('change', function () {
                    const isChecked = toggle.checked;
                    const piloteId = toggle.dataset.id; // Récupérer l'ID du pilote

                    // Envoi de la requête AJAX pour mettre à jour le statut et ajuster la firstdate
                    fetch('{{ path('update_statut_and_date', {'id': 'piloteId'}) }}'.replace('piloteId', piloteId), {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest',
                            'X-CSRF-TOKEN': '{{ csrf_token('update_statut_and_date') }}'
                        },
                        body: JSON.stringify({
                            statut: isChecked // Envoyer le nouveau statut
                        })
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Erreur lors de la mise à jour du statut.');
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                console.log('Statut et firstdate mis à jour avec succès');
                            } else {
                                console.error('Erreur côté serveur : ', data.error);
                                alert('Une erreur s\'est produite : ' + data.error);
                            }
                        })
                        .catch(error => {
                            console.error('Erreur:', error);
                            alert('Une erreur s\'est produite lors de la mise à jour du statut.');
                        });
                });
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const numeroSearch = document.getElementById('numeroSearch');
            const nomSearch = document.getElementById('nomSearch');
            const prenomSearch = document.getElementById('prenomSearch');
            const dateFilter = document.getElementById('dateFilter');
            const resetFilter = document.getElementById('resetFilter');
            const pilotesTable = document.getElementById('pilotesTable');
            const rows = pilotesTable.querySelectorAll('tr');

            // Fonction pour filtrer les résultats en fonction des critères
            function filterPilotes() {
                const numeroValue = numeroSearch.value.toLowerCase();
                const nomValue = nomSearch.value.toLowerCase();
                const prenomValue = prenomSearch.value.toLowerCase();
                const dateValue = dateFilter.value;

                rows.forEach(row => {
                    const numero = row.querySelector('.numero').textContent.toLowerCase();
                    const nom = row.querySelector('.nom').textContent.toLowerCase();
                    const prenom = row.querySelector('.prenom').textContent.toLowerCase();
                    const firstDate = row.querySelector('.firstdate').textContent;

                    // Vérifier si les critères correspondent
                    const numeroMatch = numero.includes(numeroValue);
                    const nomMatch = nom.includes(nomValue);
                    const prenomMatch = prenom.includes(prenomValue);
                    const dateMatch = !dateValue || firstDate === dateValue;

                    // Afficher ou masquer la ligne en fonction des critères
                    if (numeroMatch && nomMatch && prenomMatch && dateMatch) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

            // Filtrage lorsque l'utilisateur tape dans les champs de recherche
            numeroSearch.addEventListener('input', filterPilotes);
            nomSearch.addEventListener('input', filterPilotes);
            prenomSearch.addEventListener('input', filterPilotes);
            dateFilter.addEventListener('input', filterPilotes);

            // Réinitialiser les filtres
            resetFilter.addEventListener('click', function () {
                numeroSearch.value = '';
                nomSearch.value = '';
                prenomSearch.value = '';
                dateFilter.value = '';
                filterPilotes();
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleSwitches = document.querySelectorAll('.toggle-switch');

            toggleSwitches.forEach(function (toggle) {
                toggle.addEventListener('change', function () {
                    // Rafraîchir simplement la page
                    location.reload();
                });
            });
        });
    </script>


{% endblock %}
